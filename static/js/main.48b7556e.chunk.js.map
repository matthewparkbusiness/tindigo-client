{"version":3,"sources":["themes/theme.js","components/Header.js","utilities/API.js","pages/PostList/PostListComponent.js","pages/Home/index.js","pages/Profile/index.js","pages/PostCreate/Fields/Visibility.js","pages/PostCreate/Fields/Tags.js","pages/PostCreate/Fields/Question.js","pages/PostCreate/Fields/Description.js","pages/PostCreate/Fields/VotingOptions.js","pages/PostCreate/ButtonCreatePost.js","pages/PostCreate/index.js","pages/PostView/SideBar.js","pages/PostView/PostInfo.js","pages/PostView/PostOptions.js","pages/PostView/CommentField.js","pages/PostView/VoteButton.js","pages/PostView/index.js","redux/actions/user.js","redux/actions/types.js","pages/SignUp/index.js","pages/Login/index.js","pages/Search/index.js","App.js","serviceWorker.js","redux/reducers/index.js","redux/reducers/userReducer.js","store.js","index.js","assets/images/profile-pic-placeholder.png"],"names":["theme","createMuiTheme","typography","fontFamily","primary","secondary","error","bgcolor","useStyles","makeStyles","grow","flexGrow","menuButton","marginRight","spacing","title","Object","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","mobileMenuLink","textDecoration","desktopMenuLink","list","fullList","withRouter","props","classes","_React$useState","React","useState","_React$useState2","slicedToArray","mobileMoreAnchorEl","setMobileMoreAnchorEl","_React$useState3","_React$useState4","sideBar","setSideBar","isMobileMenuOpen","Boolean","isLoggedIn","window","sessionStorage","username","toggleDrawer","open","event","type","key","handleMobileMenuClose","mobileMenuId","handleLogout","path","removeItem","history","push","react_default","a","createElement","className","AppBar","Toolbar","IconButton","edge","aria-label","onClick","Menu_default","Drawer","onClose","role","onKeyDown","List","react_router_dom","to","ListItem","button","ListItemIcon","Home_default","ListItemText","AccountCircle_default","Create_default","Typography","variant","noWrap","Search_default","InputBase","placeholder","root","input","onKeyPress","ev","location","href","target","value","inputProps","Button","aria-controls","aria-haspopup","currentTarget","MoreVert_default","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","MenuItem","Badge","ExitToApp_default","PersonAdd_default","API_URL","postData","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","data","token","response","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","method","mode","cache","credentials","headers","Content-Type","Authorization","concat","redirect","referrer","body","JSON","stringify","sent","json","abrupt","stop","_x","_x2","apply","this","getData","_ref2","_callee2","_args2","_context2","_x3","card","minWidth","bullet","margin","transform","fontSize","pos","marginBottom","cardStyle","PostLink","_useState","_useState2","postInformation","setPostInformation","_useState3","_useState4","isFetching","setIsFetching","useEffect","loadedInfo","date","year","month","dt","postId","Date","dateCreated","getFullYear","getMonth","getDate","isPrivate","dateCreatedFormatted","loadPostInformation","Container","Grid","container","Card","style","CardContent","gutterBottom","tags","map","el","size","component","question","description","CardActions","PostList","postIds","String","class","Home","accountInformation","setAccountInformation","loadAccountInformation","item","xs","Fragment","posts","PostListComponent","avatar","console","log","Avatar","alt","src","profileImage","firstName","lastName","Fab","Edit_default","aboutMe","VisibilityField","TextField","select","label","textField","visibility","onChange","setVisibility","onBlur","handleBlur","helperText","shouldMarkError","messages","SelectProps","MenuProps","menu","visibilityOptions","option","TagsField","handleAddTagForTextField","handleAdd","startIcon","Icon","handleRemove","QuestionField","setQuestion","DescriptionField","setDescription","VotingOptionsField","options","handleAddOptionForTextField","ButtonCreatePost","isDisabled","keys","errors","filter","some","endIcon","handlePost","disabled","flexWrap","redirectToTarget","setTags","_useState5","_useState6","_useState7","_useState8","setOptions","_useState9","_useState10","touched","setTouched","ref","textContent","split","document","getElementById","toConsumableArray","field","objectSpread","substring","parentElement","index","indexOf","splice","post","result","choices","message","_id","t0","hasError","shouldShow","maxWidth","noValidate","autoComplete","Visibility","Tags","Question","Description","VotingOptions","PostCreate_ButtonCreatePost","SideBar","users","user","sm","md","avatarSidebar","fontWeight","choice","isoString","formatDate","PostInfo","lg","postInfo","PostOptions","FormControl","formControl","FormLabel","RadioGroup","name","handleChange","toLowerCase","FormControlLabel","control","Radio","CommentBlock","content","CommentField","Divider","commentsList","comments","comment","makeCommentRequest","reload","fullWidth","VoteButton","handleVote","answer","marginTop","PostView","setOption","setComment","_event$target","getQueryStringValue","decodeURIComponent","replace","RegExp","encodeURIComponent","i","userAlreadyVoted","userVotes","userChoice","revoting","pieChartData","votes","userAllowedToVote","PostView_SideBar","PostView_PostInfo","index_esm","chartType","loader","is3D","rootProps","data-testid","PostView_CommentField","PostView_PostOptions","PostView_VoteButton","processVote","setUser","payload","emailRegex","dispatch","useDispatch","setFirstName","setLastName","emailAddress","setEmailAddress","setAboutMe","setUsername","_useState11","_useState12","password","setPassword","_useState13","_useState14","confirmPass","setConfirmPass","_useState15","_useState16","handleSignUp","validateEmail","match","passwordMatch","isIncorrect","setIncorrect","handleLogin","searchQuery","searchInformation","setSearchInformation","Math","ceil","postIdList","loadSearchInformation","App","ThemeProvider","components_Header","react_router","exact","Profile","PostCreate","SignUp","Login","Search","hostname","combineReducers","state","action","createStore","reducers","ReactDOM","render","es","store","src_App","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.48b7556e.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Roboto\"'\r\n  },\r\n  primary: \"#f04040\",\r\n  secondary: \"#1f1f1f\",\r\n  error: \"#d8000c\",\r\n  bgcolor: \"#f6f6f6\"\r\n});\r\n","import React from 'react';\r\nimport { withRouter, Link } from 'react-router-dom'\r\n\r\nimport { AppBar, Toolbar, IconButton, Typography, InputBase,\r\n         Badge, MenuItem, Menu, Button, Drawer, List,\r\n         ListItem, ListItemIcon, ListItemText, TextField } from '@material-ui/core';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing(7),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 7),\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 200,\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    mobileMenuLink: {\r\n      color: 'black',\r\n      textDecoration: 'none'\r\n    },\r\n    desktopMenuLink: {\r\n      color: 'white',\r\n      textDecoration: 'none'\r\n    },\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n  }));\r\n\r\nfunction Header(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [sideBar, setSideBar] = React.useState(false)\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const isLoggedIn = Boolean(window.sessionStorage.username)\r\n\r\n  const toggleDrawer = open => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setSideBar(open);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = event => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const sideList = () => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <List>\r\n        <Link className={classes.mobileMenuLink} to='/'>\r\n          <ListItem button key='Home'>\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Home' />\r\n          </ListItem>\r\n        </Link>\r\n        {\r\n          isLoggedIn ? (\r\n            <Link className={classes.mobileMenuLink} to='/profile'>\r\n              <ListItem button key='Profile'>\r\n                <ListItemIcon>\r\n                  <AccountCircleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary='Profile' />\r\n              </ListItem>\r\n            </Link>\r\n          ) : ''\r\n        } {\r\n          isLoggedIn ? (\r\n            <Link className={classes.mobileMenuLink} to='/post/create'>\r\n              <ListItem button key='Create Posts'>\r\n                <ListItemIcon>\r\n                  <CreateIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary='Create Posts' />\r\n              </ListItem>\r\n            </Link>\r\n          ) : ''\r\n        }\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const renderSideBar = () => {\r\n    return (\r\n      <div>\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={toggleDrawer(true)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Drawer open={sideBar} onClose={toggleDrawer(false)}>\r\n          {sideList()}\r\n        </Drawer>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n\r\n  const redirectToTarget = (path) => {\r\n    props.history.push(path);\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    window.sessionStorage.removeItem('token')\r\n    window.sessionStorage.removeItem('username')\r\n    redirectToTarget('/')\r\n  }\r\n\r\n  const renderMobileMenu = () => {\r\n    if (isLoggedIn) {\r\n      return (\r\n        <Menu\r\n          anchorEl={mobileMoreAnchorEl}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          id={mobileMenuId}\r\n          keepMounted\r\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          open={isMobileMenuOpen}\r\n          onClose={handleMobileMenuClose}\r\n        >\r\n          <MenuItem onClick={handleLogout}>\r\n            <IconButton color=\"inherit\">\r\n              <Badge color=\"secondary\">\r\n                <ExitToAppIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <p>Logout</p>\r\n          </MenuItem>\r\n        </Menu>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <Menu\r\n          anchorEl={mobileMoreAnchorEl}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          id={mobileMenuId}\r\n          keepMounted\r\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          open={isMobileMenuOpen}\r\n          onClose={handleMobileMenuClose}\r\n        >\r\n          <Link className={classes.mobileMenuLink} to='/login'>\r\n            <MenuItem>\r\n              <IconButton color=\"inherit\">\r\n                <Badge color=\"secondary\">\r\n                  <ExitToAppIcon />\r\n                </Badge>\r\n              </IconButton>\r\n              <p>Login</p>\r\n            </MenuItem>\r\n          </Link>\r\n          <Link className={classes.mobileMenuLink} to='/signup'>\r\n            <MenuItem>\r\n              <IconButton color=\"inherit\">\r\n                <Badge color=\"secondary\">\r\n                  <PersonAddIcon />\r\n                </Badge>\r\n              </IconButton>\r\n              <p>Sign Up</p>\r\n            </MenuItem>\r\n          </Link>\r\n        </Menu>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          \r\n          {renderSideBar()}\r\n\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Tindigo\r\n          </Typography>\r\n          <div className={classes.search}>\r\n          <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              \r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              onKeyPress={(ev) => {\r\n                if (ev.key === 'Enter') {\r\n                    window.location.href=\"/search?query=\" + ev.target.value\r\n                }\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n\r\n          <div className={classes.grow} />\r\n\r\n          {isLoggedIn ? (\r\n\r\n            <div className={classes.sectionDesktop}>\r\n              <Button onClick={handleLogout} color=\"inherit\">\r\n                Logout\r\n              </Button>\r\n            </div>\r\n\r\n          ) : (\r\n\r\n            <div className={classes.sectionDesktop}>\r\n              <Link className={classes.desktopMenuLink} to='/login'>\r\n                <Button color=\"inherit\">\r\n                    Login\r\n                </Button>\r\n              </Link>\r\n\r\n              <Link className={classes.desktopMenuLink} to='/signup'>\r\n                <Button color=\"inherit\">\r\n                    Sign Up\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n\r\n          )}\r\n\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);","const API_URL = \"https://still-chamber-79686.herokuapp.com\"\r\n\r\nexport const postData = async (url, data, token='') => {\r\n  const response = await fetch(API_URL + url, {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      mode: 'cors', // no-cors, *cors, same-origin\r\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: 'same-origin', // include, *same-origin, omit\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      redirect: 'follow', // manual, *follow, error\r\n      referrer: 'no-referrer', // no-referrer, *client\r\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n  })\r\n    \r\n  return await response.json() // parses JSON response into native JavaScript objects\r\n}\r\n\r\nexport const getData = async (url, token='') => {\r\n  const response = await fetch(API_URL + url, {\r\n    method: 'GET',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization' : `Bearer ${token}`\r\n    },\r\n    redirect: 'follow',\r\n    referrer: 'no-referrer',\r\n  })\r\n\r\n  return await response.json()\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { getData } from '../../utilities/API'\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n  \r\n\r\nfunction PostList(props) {\r\n    /*\r\n    const [accountInformation, setAccountInformation] = useState(0)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n    useEffect(() => {\r\n        \r\n        const loadAccountInformation = async () => {\r\n            let loadedInfo = await getData('/post/id/' + username, token)\r\n            setAccountInformation(loadedInfo)\r\n            setIsFetching(false)\r\n            console.log(loadedInfo)\r\n        }\r\n        loadAccountInformation()\r\n\r\n    }, [])*/\r\n    if(props.postIds == 0){\r\n        return (<div></div>)\r\n    }\r\n    if (typeof props.postIds  === 'string' || props.postIds  instanceof String){\r\n        return (\r\n            <div>\r\n                 { <PostLink postId={props.postIds} token={props.token} username={props.username}/>}\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n       <div class='row'>\r\n        {props.postIds.map(postId => {\r\n            return (\r\n            <PostLink postId={postId} token={props.token} username={props.username}/>\r\n            )\r\n        })}\r\n        </div>\r\n    );\r\n}\r\n\r\nvar cardStyle = {\r\n    display: 'block',\r\n    width: '100vw'\r\n}\r\n\r\nfunction PostLink(props) {\r\n\r\n    const [postInformation, setPostInformation] = useState(0)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n    useEffect(() => {\r\n        const loadPostInformation = async () => {\r\n            let loadedInfo = await getData('/post/id/' + props.postId + \"?username=\" + props.username, props.token)\r\n            \r\n            if(loadedInfo.data){\r\n\r\n                let date = new Date(loadedInfo.data.dateCreated);\r\n                let year = date.getFullYear();\r\n                let month = date.getMonth()+1;\r\n                let dt = date.getDate();\r\n                loadedInfo.isPrivate = false\r\n\r\n                loadedInfo.data.dateCreatedFormatted = month + \"/\" + dt + \"/\" + year;\r\n            }\r\n            else{\r\n                loadedInfo.isPrivate = true\r\n            }\r\n            setPostInformation(loadedInfo)\r\n            setIsFetching(false)\r\n            \r\n        }\r\n        loadPostInformation()\r\n    }, [])\r\n    \r\n    \r\n\r\n    \r\n    const classes = useStyles();\r\n    if(isFetching){\r\n        return (<div>  </div>)\r\n    }\r\n    return (\r\n        <Container>\r\n            <Grid container>\r\n                <Card className={classes.card} style={cardStyle}>\r\n                    {postInformation.isPrivate ?\r\n                    <CardContent>\r\n                        \r\n\r\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                            Private Post\r\n                        </Typography> </CardContent>:\r\n\r\n                        <CardContent>\r\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                            {postInformation.data.dateCreatedFormatted}\r\n                        </Typography>\r\n                        <div id='tags'>\r\n                            {postInformation.data.tags.map(el => {\r\n                                return (\r\n                                    <Button\r\n                                    key={el}\r\n                                    value='tag'\r\n                                    className={classes.button}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\" >\r\n                                        {el}\r\n                                    </Button>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {postInformation.data.question}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            {\"@\" + postInformation.data.username}\r\n                        </Typography>\r\n\r\n                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                            {postInformation.data.description}\r\n                        </Typography>\r\n                        \r\n                    </CardContent>}\r\n\r\n                    {postInformation.isPrivate ? '':\r\n                    <CardActions>\r\n                        <Button size=\"small\" href={\"../post/view\" + \"?id=\" + props.postId}>View</Button>\r\n                        </CardActions> }\r\n                </Card>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default PostList","import './Home.css'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Container, Grid } from '@material-ui/core';\r\n\r\nimport { getData } from '../../utilities/API'\r\nimport PostList from '../PostList/PostListComponent'\r\n\r\nfunction Home(props) {\r\n\r\n    let username, token\r\n    if (window.sessionStorage.username) {\r\n        username = window.sessionStorage.username\r\n        token = window.sessionStorage.token\r\n    }\r\n\r\n    const [accountInformation, setAccountInformation] = useState(0)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n    useEffect(() => {\r\n        \r\n        const loadAccountInformation = async () => {\r\n            if(username){\r\n                let loadedInfo = await getData('/account/u/' + username, token)\r\n                setAccountInformation(loadedInfo)\r\n                setIsFetching(false)\r\n            }\r\n            \r\n        }\r\n        loadAccountInformation()\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        \r\n        <Container>\r\n            <div style = {{height:\"20vh\"}}> </div>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                <center>\r\n                    <p style={ {color : \"#99\", fontSize : \"70px\"} }>\r\n                        {username ?\r\n                        `Welcome @${username}!` :\r\n                        (<>Welcome To Tindigo \r\n                        \r\n                        </>)}\r\n                    </p>\r\n                    <p style={ {color : \"#99\", fontSize : \"40px\"} }> Voting made fast and easy... </p>\r\n                    <p style={ {color : \"#99\", fontSize : \"15px\"} }>\r\n                        {username ?\r\n                        `` :\r\n                        (<><Link id='new-person-link' to='/login'>Log in</Link> or <Link id='new-person-link' to='/signup'>create an account!</Link>\r\n                        \r\n                        </>)}\r\n                        \r\n                    </p>\r\n                    </center>\r\n                </Grid>\r\n            </Grid>\r\n            {username ? (\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <h1>Your Recent Posts</h1>\r\n                    </Grid>\r\n                    {isFetching ? <div></div> : (accountInformation.data.posts.length == 0 ? \"You have no posts right now.\" : <PostList postIds={isFetching ? 0 : accountInformation.data.posts} token={token} username={username}/>)}\r\n                    \r\n                </Grid> ) : '' \r\n            }\r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Container, Grid, Avatar, Fab } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport profileImage from '../../assets/images/profile-pic-placeholder.png';\r\n\r\nimport { getData } from '../../utilities/API';\r\nimport PostList from '../PostList/PostListComponent';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    avatar: {\r\n        margin: 10,\r\n        width: 200,\r\n        height: 200,\r\n    },\r\n  }));\r\n\r\nfunction Profile(props) {\r\n    const classes = useStyles()\r\n    \r\n    const redirectToTarget = (path) => {\r\n        props.history.push(path);\r\n    }\r\n\r\n    let username, token\r\n    if (window.sessionStorage.username) {\r\n        username=window.sessionStorage.username\r\n        token=window.sessionStorage.token\r\n    }\r\n    else {\r\n        redirectToTarget('/')\r\n    }\r\n\r\n    \r\n    const [accountInformation, setAccountInformation] = useState(0)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n    useEffect(() => {\r\n        \r\n        const loadAccountInformation = async () => {\r\n            let loadedInfo = await getData('/account/u/' + username, token)\r\n\r\n            let date = new Date(loadedInfo.data.dateCreated);\r\n            let year = date.getFullYear();\r\n            let month = date.getMonth()+1;\r\n            let dt = date.getDate();\r\n\r\n            loadedInfo.data.dateCreatedFormatted = month + \"/\" + dt + \"/\" + year;\r\n\r\n            setAccountInformation(loadedInfo)\r\n            setIsFetching(false)\r\n            console.log(loadedInfo)\r\n        }\r\n        loadAccountInformation()\r\n\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <Container>\r\n            \r\n            <div style = {{height:\"5vh\"}}> </div>\r\n            <Grid container>\r\n                <Grid item xs={3}>\r\n                    <Avatar\r\n                    alt=\"Profile Pic Placeholder\"\r\n                    src={profileImage}\r\n                    className={classes.avatar} />\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <h1>{isFetching ? \"Loading your account...\" : accountInformation.data.firstName + \" \" + accountInformation.data.lastName}\r\n                    &nbsp;\t\t&nbsp;\r\n                        <Fab color=\"secondary\" aria-label=\"edit\">\r\n                            <EditIcon />\r\n                        </Fab>\r\n                    </h1>\r\n                \r\n                    <h2>{\"@\" + username}</h2> \r\n                    \r\n\r\n                    <h3>About me</h3>\r\n                    <p>{!isFetching && accountInformation.data.aboutMe ? accountInformation.data.aboutMe : \"This user has no about me.\"}</p>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <h1>Your Posts</h1>\r\n                    <PostList postIds={isFetching ? 0 : accountInformation.data.posts} token={token} username={username}/>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default withRouter(Profile);\r\n\r\n\r\n\r\n/*\r\nclass Profile extends React.Component {\r\n\r\n    \r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        \r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        \r\n\r\n        const redirectToTarget = (path) => {\r\n            props.history.push(path);\r\n        }\r\n    \r\n        let username, token\r\n        if (window.sessionStorage.username) {\r\n            username=window.sessionStorage.username\r\n            token=window.sessionStorage.token\r\n        }\r\n        else {\r\n            redirectToTarget('/')\r\n        }\r\n\r\n        \r\n        let accountInformation, isFetching\r\n        isFetching = true\r\n        const loadAccountInformation = async () => {\r\n            accountInformation = await getData('/account/u/' + this.state.username, this.state.props.token)\r\n            isFetching = false\r\n            this.setState({data:accountInformation, fetching : isFetching})\r\n            console.log(accountInformation)\r\n        }\r\n        loadAccountInformation()\r\n\r\n        return {\r\n            username : username,\r\n            token : token\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    //<h1>{this.state.isFetching ? \"Loading your account...\" : this.state.accountInformation.data.firstName + \" \" + this.state.accountInformation.data.lastName}</h1>\r\n                        \r\n    render() {\r\n        \r\n        let classes = useStyles()\r\n\r\n        return (\r\n            <Container>\r\n                <h1>Welcome to Tindigo!</h1>\r\n                <Grid container>\r\n                    <Grid item xs={4}>\r\n                        <Avatar\r\n                        alt=\"Profile Pic Placeholder\"\r\n                        src={profileImage}\r\n                        className={classes.avatar} />\r\n                    </Grid>\r\n    \r\n                    <Grid item xs={8}>\r\n                        \r\n                        <h2>{this.state.username}</h2>\r\n                        <h3>About me</h3>\r\n                        <p>Fugiat aute dolore dolore aliquip nulla fugiat laboris esse. Exercitation occaecat nulla fugiat magna occaecat ut sit fugiat culpa eu occaecat. Velit qui velit cupidatat anim tempor cillum aliqua ut magna velit ad. Cillum enim et deserunt nostrud ut eiusmod qui elit. Nostrud ea Lorem laborum ea amet elit minim.</p>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <h1>Your Posts</h1>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        );\r\n    }\r\n}*/\r\n","import React from 'react';\r\nimport { TextField, MenuItem } from '@material-ui/core'\r\n\r\nfunction VisibilityField(props) {\r\n\r\n    const handleChange = event => {\r\n        props.setVisibility(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n            id=\"select-visibility\"\r\n            select\r\n            label=\"Select Poll Visibility\"\r\n            className={props.classes.textField}\r\n            value={props.visibility}\r\n            onChange={handleChange}\r\n            onBlur={props.handleBlur('visibility')}\r\n            helperText={props.shouldMarkError('visibility') ? props.messages.visibility : '' }\r\n            margin=\"normal\"\r\n            SelectProps={{\r\n                MenuProps: {\r\n                className: props.classes.menu,\r\n                },\r\n            }} >\r\n                {props.visibilityOptions.map(option => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VisibilityField","import React from 'react';\r\nimport { TextField, Button, Icon } from '@material-ui/core'\r\n\r\nfunction TagsField(props) {\r\n    return (\r\n        <div>\r\n            <div className='field'>\r\n                        <TextField\r\n                        id=\"tag-input\"\r\n                        className={props.classes.textField}\r\n                        label=\"Tags\"\r\n                        onBlur={props.handleBlur('tags')}\r\n                        onKeyPress={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                console.log(ev.target.value)\r\n                                props.handleAddTagForTextField(ev)\r\n                            }\r\n                          }}\r\n                        helperText={props.shouldMarkError('tags') ? props.messages.tags : ''}\r\n                        margin=\"normal\" />\r\n\r\n                        <Button\r\n                        className={props.classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={props.handleAdd} >\r\n                            Add tag\r\n                        </Button>\r\n                </div>\r\n\r\n                <div id='tags'>\r\n                    {props.tags.map(el => {\r\n                        return (\r\n                            <Button\r\n                            key={el}\r\n                            value='tag'\r\n                            className={props.classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<Icon>close</Icon>}\r\n                            size=\"medium\"\r\n                            onClick={props.handleRemove} >\r\n                                {el}\r\n                            </Button>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default TagsField","import React from 'react';\r\nimport { TextField } from '@material-ui/core'\r\n\r\nfunction QuestionField(props) {\r\n    return (\r\n        // <div className='field'>\r\n            <TextField\r\n            id=\"question\"\r\n            className={props.classes.textField}\r\n            label=\"Question\"\r\n            onBlur={props.handleBlur('question')}\r\n            helperText={props.shouldMarkError('question') ? props.messages.question : ''}\r\n            margin=\"normal\"\r\n            onChange={event => { props.setQuestion(event.target.value) }}\r\n            value={props.question} />\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default QuestionField","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nfunction DescriptionField(props) {\r\n    return (\r\n        // <div className='field'>\r\n            <TextField\r\n            id=\"description\"\r\n            className={props.classes.textField}\r\n            label=\"Description\"\r\n            onBlur={props.handleBlur('description')}\r\n            helperText={props.shouldMarkError('description') ? props.messages.description : ''}\r\n            margin=\"normal\"\r\n            onChange={event => { props.setDescription(event.target.value) }}\r\n            value={props.description} />\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default DescriptionField","import React from 'react'\r\nimport { TextField, Button, Icon } from '@material-ui/core'\r\n\r\nfunction VotingOptionsField(props) {\r\n    return (\r\n        <div>\r\n            <div className='field'>\r\n                <TextField\r\n                id=\"option-input\"\r\n                className={props.classes.textField}\r\n                label=\"Voting Option\"\r\n                onBlur={props.handleBlur('options')}\r\n                helperText={props.shouldMarkError('options') ? props.messages.options : ''}\r\n                onKeyPress={(ev) => {\r\n                    if (ev.key === 'Enter') {\r\n                        props.handleAddOptionForTextField(ev)\r\n                    }\r\n                  }}\r\n                margin=\"normal\" />\r\n                \r\n                <Button\r\n                className={props.classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                onClick={props.handleAdd} >\r\n                    Add option\r\n                </Button>\r\n            </div>\r\n\r\n            <div id='options'>\r\n            {props.options.map(el => {\r\n                    return (\r\n                        <Button\r\n                        key={el}\r\n                        value='option'\r\n                        className={props.classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        startIcon={<Icon>close</Icon>}\r\n                        size=\"medium\"\r\n                        onClick={props.handleRemove} >\r\n                            {el}\r\n                        </Button>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VotingOptionsField","import React from 'react'\r\nimport { Button, Icon } from '@material-ui/core'\r\n\r\nfunction ButtonCreatePost(props) {\r\n    const isDisabled = Object.keys(props.errors)\r\n                             .filter(key => key !== 'description')\r\n                             .some(key => props.errors[key])\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={props.classes.button}\r\n            endIcon={<Icon>send</Icon>}\r\n            size='large'\r\n            onClick={props.handlePost}\r\n            disabled={ isDisabled }>\r\n                Post\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonCreatePost","import './PostCreate.css'\r\nimport React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core'\r\n\r\nimport VisibilityField from './Fields/Visibility';\r\nimport TagsField from './Fields/Tags'\r\nimport QuestionField from './Fields/Question';\r\nimport DescriptionField from './Fields/Description';\r\nimport VotingOptionsField from './Fields/VotingOptions';\r\nimport ButtonCreatePost from './ButtonCreatePost';\r\n\r\nimport { postData } from '../../utilities/API'\r\n\r\nconst visibilityOptions = [\r\n    {\r\n      value: 'everyone',\r\n      label: 'Public',\r\n    },\r\n    {\r\n      value: 'group',\r\n      label: 'Group only',\r\n    }\r\n  ];\r\n  \r\n  const useStyles = makeStyles(theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 300,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst PostCreate = props => {\r\n    const redirectToTarget = (path) => {\r\n        props.history.push(path);\r\n    }\r\n\r\n    let username, token\r\n    if (window.sessionStorage.username) {\r\n        username=window.sessionStorage.username\r\n        token=window.sessionStorage.token\r\n    }\r\n    else {\r\n        redirectToTarget('/')\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const [visibility, setVisibility] = React.useState('');\r\n    const [tags, setTags] = useState([])\r\n    const [question, setQuestion] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [options, setOptions] = useState([])\r\n\r\n    const [touched, setTouched] = useState({\r\n        visibility: false,\r\n        tags: false,\r\n        question: false,\r\n        description: false,\r\n        options: false\r\n    })\r\n\r\n    const messages = {\r\n        visibility: \"Please select a visibility option\",\r\n        tags: 'Please provide at least one tag',\r\n        question: 'Please provide a question for your poll',\r\n        description: 'A description is not required, but it may help',\r\n        options: 'Please provide at least two voting options'\r\n    }\r\n\r\n    const handleAdd = event => {\r\n        const ref=event.target.textContent.split(' ')[1]\r\n        const input=document.getElementById(`${ref}-input`)\r\n        const { value }=input\r\n        if (ref === 'tag') setTags([...tags, value])\r\n        if (ref === 'option') setOptions([...options, value])\r\n        input.value=''\r\n    }\r\n\r\n    const handleAddTagForTextField = event => {\r\n        const value =event.target.value\r\n        setTags([...tags, value])\r\n        event.target.value=''\r\n    }\r\n\r\n    const handleAddOptionForTextField = event => {\r\n        const value =event.target.value\r\n        setOptions([...options, value])\r\n        event.target.value=''\r\n    }\r\n\r\n    const handleBlur = field => event => {\r\n        setTouched({...touched, [field]: true})\r\n    }\r\n\r\n    const handleRemove = event => {\r\n        let target=event.target\r\n        let ref=target.textContent.substring(5)\r\n        let { value } = target\r\n\r\n        if (! value) {\r\n            target = target.parentElement\r\n            value = target.value\r\n\r\n            if (! value) {\r\n                target = target.parentElement.parentElement\r\n                ref=target.textContent.substring(5)\r\n                value = target.value\r\n            }\r\n        }\r\n        \r\n        if (value === 'tag') {\r\n            const index=tags.indexOf(ref)\r\n            tags.splice(index, 1)\r\n            setTags([...tags])\r\n        } else if (value === 'option') {\r\n            const index=options.indexOf(ref)\r\n            options.splice(index, 1)\r\n            setOptions([...options])\r\n        }\r\n    }\r\n\r\n    const handlePost = async () => {\r\n        try {\r\n            const post = {\r\n                username,\r\n                visibility,\r\n                tags,\r\n                question,\r\n                description,\r\n                choices: options\r\n            }\r\n            console.log(post)\r\n            const result = await postData('/post/id', post, token)\r\n            console.log(result)\r\n            if(result.message === \"success\"){\r\n                redirectToTarget(\"/post/view?id=\" + result.data._id)\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        return {\r\n            visibility: visibility.length <= 0,\r\n            tags: tags.length <= 0,\r\n            description: description.length <= 0,\r\n            question: question.length <= 0,\r\n            options: options.length <= 1\r\n        }\r\n    }\r\n\r\n    const errors = validate()\r\n\r\n    const shouldMarkError = field => {\r\n        const hasError = errors[field];\r\n        const shouldShow = touched[field];\r\n        return hasError ? shouldShow : false;\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <h1>Create a Poll</h1>\r\n            <form className={classes.container} noValidate autoComplete='off'>\r\n                \r\n                <VisibilityField\r\n                classes={classes}\r\n                visibility={visibility}\r\n                setVisibility={setVisibility}\r\n                visibilityOptions={visibilityOptions}\r\n                handleBlur={handleBlur}\r\n                shouldMarkError={shouldMarkError}\r\n                messages={messages} />\r\n\r\n                <TagsField\r\n                classes={classes}\r\n                tags={tags}\r\n                handleAdd={handleAdd}\r\n                handleBlur={handleBlur}\r\n                handleRemove={handleRemove}\r\n                shouldMarkError={shouldMarkError}\r\n                handleAddTagForTextField={handleAddTagForTextField}\r\n                messages={messages} />\r\n\r\n                <QuestionField\r\n                classes={classes}\r\n                question={question}\r\n                setQuestion={setQuestion}\r\n                handleBlur={handleBlur}\r\n                shouldMarkError={shouldMarkError}\r\n                messages={messages} />\r\n\r\n                <DescriptionField\r\n                classes={classes}\r\n                description={description}\r\n                setDescription={setDescription}\r\n                handleBlur={handleBlur}\r\n                shouldMarkError={shouldMarkError}\r\n                messages={messages} />\r\n\r\n                <VotingOptionsField\r\n                classes={classes}\r\n                options={options}\r\n                setOptions={setOptions}\r\n                handleAdd={handleAdd}\r\n                handleBlur={handleBlur}\r\n                handleRemove={handleRemove}\r\n                shouldMarkError={shouldMarkError}\r\n                handleAddOptionForTextField = {handleAddOptionForTextField}\r\n                messages={messages} />\r\n                \r\n                <ButtonCreatePost\r\n                classes={classes}\r\n                handlePost={handlePost}\r\n                errors={errors} />\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default withRouter(PostCreate)","import React from 'react'\r\nimport { Grid, Avatar } from '@material-ui/core'\r\n\r\nfunction formatDate(isoString){\r\n    let date = new Date(isoString);\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth()+1;\r\n    let dt = date.getDate();\r\n\r\n    return month + \"/\" + dt + \"/\" + year;\r\n}\r\n\r\nconst SideBar = props => {\r\n    if(props.users.length == 0){\r\n        return (<Grid item xs={3}> No votes yet.</Grid>)\r\n    }\r\n    return (\r\n        <Grid item xs={3}>\r\n            {props.users.map(user => {\r\n                return (\r\n                    <Grid container\r\n                    key={user.username} >\r\n                        <Grid item xs={6} sm={5} md={3}>\r\n                            <Avatar\r\n                            alt=\"Profile Pic Placeholder\"\r\n                            src={props.profileImage}\r\n                            className={props.classes.avatarSidebar} />\r\n                        </Grid>\r\n                        <Grid item xs={6} sm={7} md={9}>\r\n                            <Grid container>\r\n                                <Grid item xs={12}>\r\n                                    <label><b>{\"@\" + user.username}</b></label>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <label style={{fontWeight: 20}}>{user.choice}</label>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <label style={{fontWeight: 20}}>{formatDate(user.date)}</label>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n            })}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SideBar","import React from 'react'\r\nimport { Grid, Avatar, Button } from '@material-ui/core'\r\n\r\nconst PostInfo = props => {\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={7} sm={6} md={4} lg={3}>\r\n                <Avatar\r\n                className={props.classes.avatar}\r\n                alt=\"Profile Pic Placeholder\"\r\n                src={props.profileImage} />\r\n            </Grid>\r\n\r\n            <Grid item xs={5} sm={6} md={8} lg={9}>\r\n                <div id='tags'>\r\n                    <label>Tags</label>\r\n                    {props.postInfo.tags.map(el => {\r\n                        return (\r\n                            <Button\r\n                            key={el}\r\n                            value='tag'\r\n                            className={props.classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"medium\" >\r\n                                {el}\r\n                            </Button>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div id='question'>\r\n                    <h2>{props.postInfo.question}</h2>\r\n                </div>\r\n                <div id='description'>\r\n                    <h3>{props.postInfo.description?props.postInfo.description:\"\"}</h3>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default PostInfo","import React from 'react'\r\nimport { Grid, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup} from '@material-ui/core'\r\n\r\nfunction handleChange(event){\r\n    console.log(event.target.value)\r\n}\r\n\r\n\r\nconst PostOptions = props => {\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <FormControl component=\"fieldset\" className={props.classes.formControl}>\r\n                    <FormLabel component=\"legend\">\r\n                        Voting options\r\n                    </FormLabel>\r\n                    <RadioGroup aria-label=\"voting-option\" name=\"option\" value={props.option} onChange={props.handleChange}>\r\n                        {props.postInfo.choices.map(el => {\r\n                            const key=el.choice.toLowerCase()\r\n                            return (\r\n                                <FormControlLabel\r\n                                key={el.choice}\r\n                                value={el.choice}\r\n                                control={<Radio />}\r\n                                label={el.choice} />\r\n                            )\r\n                        })}\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default PostOptions","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid, TextField, Divider } from '@material-ui/core'\r\nimport { getData, postData } from '../../utilities/API'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n\r\nconst CommentField = props => {\r\n\r\n    const handleAddComment = event => {\r\n        if (event.key === 'Enter') {\r\n            console.log(\"hi\")\r\n            async function makeCommentRequest(){\r\n                const data={ username:props.username, comment:event.target.value }\r\n                console.log(data)\r\n                try {\r\n                    const result = await postData('/post/id/' + props.commentsList._id + \"/comment\", data, props.token)\r\n                    if (result.message === 'success') {\r\n                        \r\n                        window.location.reload()\r\n                    }\r\n\r\n                }\r\n                catch(error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            makeCommentRequest()\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <Grid container>\r\n            <Divider variant=\"middle\" />\r\n            <Grid item xs={10}>\r\n\r\n                <h1>Comments</h1>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n            {props.commentsList.comments.length > 0?\r\n            (<div class='row'>\r\n                {props.commentsList.comments.map(comment => {\r\n                    return (\r\n                        <CommentBlock username={comment.username} content={comment.content}/>\r\n                    )\r\n                })}\r\n            </div>):\r\n            \r\n            (<center>No posts at this time. Be the first one to comment!</center>)}\r\n            </Grid>\r\n\r\n            <Grid item xs={10}>\r\n                <TextField\r\n                id=\"comment\"\r\n                name=\"comment\"\r\n                value={props.comment}\r\n                onChange={props.handleChange}\r\n                label=\"Write a comment\"\r\n                className={props.classes.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                onKeyPress={handleAddComment}\r\n                fullWidth={true} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\nvar cardStyle = {\r\n    display: 'block',\r\n    width: '100vw'\r\n}\r\n\r\nfunction CommentBlock(props) {\r\n    \r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <Container>\r\n            <Grid container>\r\n                <Card className={classes.card} style={cardStyle}>\r\n                    \r\n                        <CardContent>\r\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                            {\"@\" + props.username}\r\n                        </Typography>\r\n                        \r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            {props.content}\r\n                        </Typography>\r\n                        \r\n                    </CardContent>\r\n\r\n                </Card>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default CommentField","import React from 'react'\r\nimport { Grid, Button } from '@material-ui/core'\r\n\r\nconst VoteButton = props => {\r\n    return (\r\n        <Grid container>\r\n            <Button\r\n            className={props.classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={props.handleVote}>\r\n                Vote\r\n            </Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default VoteButton","import './PostView.css'\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid, Button, Divider } from '@material-ui/core'\r\n\r\nimport { getData, postData } from '../../utilities/API'\r\nimport SideBar from './SideBar'\r\nimport PostInfo from './PostInfo'\r\nimport PostOptions from './PostOptions'\r\nimport CommentField from './CommentField'\r\nimport VoteButton from './VoteButton'\r\n\r\nimport profileImage from '../../assets/images/profile-pic-placeholder.png'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\n// user data\r\nconst users=[\r\n    { username: 'Steven Colbert',\r\n      answer: 'League' },\r\n    { username: 'Dana Carvey',\r\n      answer: 'Overwatch' },\r\n    { username: 'Liev Schreiber',\r\n      answer: 'League' }\r\n]\r\n\r\n// poll tag data\r\nconst tags=[\r\n    'Gaming',\r\n    '2019'\r\n]\r\n\r\n// poll option data\r\nconst choices=[\r\n    'League',\r\n    'Overwatch'\r\n]\r\n\r\n// styling for components\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop: 30\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        width: 200,\r\n        height: 200,\r\n    },\r\n    avatarSidebar: {\r\n        margin: 10,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3),\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n\r\n\r\nconst PostView = props => {\r\n    const classes = useStyles()\r\n\r\n    const redirectToTarget = (path) => {\r\n        props.history.push(path);\r\n    }\r\n\r\n    let username, token\r\n    if (window.sessionStorage.username) {\r\n        username=window.sessionStorage.username\r\n        token=window.sessionStorage.token\r\n    }\r\n    \r\n\r\n    const [option, setOption] = useState('league')\r\n    const [comment, setComment]=useState('')\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target\r\n        \r\n        if (name === 'option') setOption(value)\r\n        if (name === 'comment') setComment(value)\r\n    }\r\n\r\n    const handleVote = event => {\r\n        console.log(option)\r\n        const processVote = async () => {\r\n            try {\r\n                const result = await postData('/post/id/' + getQueryStringValue(\"id\") + \"/vote\", {username : username, choice : option}, token)\r\n                if (result.message === 'success') {\r\n                    console.log(result)\r\n                }\r\n                else console.log(result)\r\n                window.location.href = '/post/view?id=' + getQueryStringValue(\"id\")\r\n            }\r\n            catch(error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        processVote()\r\n        \r\n    }\r\n\r\n    function getQueryStringValue (key) {  \r\n        return decodeURIComponent(window.location.href.replace(new RegExp(\"^(?:.*[&\\\\?]\" + encodeURIComponent(key).replace(/[\\.\\+\\*]/g, \"\\\\$&\") + \"(?:\\\\=([^&]*))?)?.*$\", \"i\"), \"$1\"));  \r\n    }  \r\n\r\n    const [postInformation, setPostInformation] = useState(0)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n    useEffect(() => {\r\n        const loadPostInformation = async () => {\r\n            let loadedInfo = null\r\n            if(username && token){\r\n                loadedInfo = await getData('/post/id/' + getQueryStringValue(\"id\") + \"?username=\" + username, token)\r\n            }\r\n            else{\r\n                loadedInfo = await getData('/post/id/' + getQueryStringValue(\"id\"), \"\")\r\n            }\r\n\r\n            if(loadedInfo.data.dateCreated){\r\n                let date = new Date(loadedInfo.data.dateCreated);\r\n                let year = date.getFullYear();\r\n                let month = date.getMonth()+1;\r\n                let dt = date.getDate();\r\n\r\n                loadedInfo.data.dateCreatedFormatted = month + \"/\" + dt + \"/\" + year;\r\n            }\r\n            if(loadedInfo.data){\r\n                loadedInfo.userAlreadyVoted= false\r\n                for(var i=0; i<loadedInfo.data.userVotes.length; i++){\r\n                    if(loadedInfo.data.userVotes[i].username === username) {\r\n                        loadedInfo.userAlreadyVoted = true\r\n                        loadedInfo.userChoice = loadedInfo.data.userVotes[i].choice\r\n                    }\r\n                }\r\n                loadedInfo.revoting = getQueryStringValue(\"view\") === \"revote\"\r\n                loadedInfo.pieChartData = [[\"Option\", \"Votes\"]]\r\n                for(var i=0; i<loadedInfo.data.choices.length; i++){\r\n                    loadedInfo.pieChartData.push([loadedInfo.data.choices[i].choice, loadedInfo.data.choices[i].votes])\r\n                }\r\n\r\n            }\r\n            \r\n            \r\n            console.log(loadedInfo)\r\n\r\n            setPostInformation(loadedInfo)\r\n            setIsFetching(false)\r\n        }\r\n        loadPostInformation()\r\n    }, [])\r\n    \r\n\r\n    if(isFetching){\r\n        return (<div>Loading...</div>)\r\n    }\r\n    if(!postInformation.userAllowedToVote){\r\n        return (\r\n            <Container className={classes.root} maxWidth='lg'>\r\n                <Grid container spacing={2}>\r\n                    <SideBar\r\n                    users={users}\r\n                    profileImage={profileImage}\r\n                    classes={classes} />\r\n    \r\n                    <Grid item xs={9}>\r\n                        <PostInfo\r\n                        classes={classes}\r\n                        profileImage={profileImage}\r\n                        postInfo={postInformation.data} />\r\n    \r\n\r\n                        <p>You are not authorized to vote for this post. Please <a href=\"../login\">sign in.</a></p>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        )\r\n    }\r\n    if(postInformation.userAlreadyVoted && !postInformation.revoting){\r\n        return (\r\n            <Container className={classes.root} maxWidth='lg'>\r\n                <Grid container spacing={2}>\r\n                    <SideBar\r\n                    users={postInformation.data.userVotes}\r\n                    profileImage={profileImage}\r\n                    classes={classes} />\r\n\r\n                    <Grid item xs={9}>\r\n                        <PostInfo\r\n                        classes={classes}\r\n                        profileImage={profileImage}\r\n                        postInfo={postInformation.data} />\r\n\r\n                        <h1>Poll Results</h1>\r\n                        <p>You voted for \"{postInformation.userChoice}\".</p>\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={\"400px\"}\r\n                            chartType=\"PieChart\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={postInformation.pieChartData}\r\n                            options={{\r\n                                title: '',\r\n                                // Just add this option\r\n                                is3D: true,\r\n                            }}\r\n                            rootProps={{ 'data-testid': '2' }}\r\n                        />\r\n\r\n                        \r\n\r\n                        <Button\r\n                                    className={classes.button}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    onClick={() => {\r\n\r\n                                        \r\n                                        window.location.href = '/post/view?id=' + getQueryStringValue(\"id\") + \"&view=revote\"\r\n\r\n                                    }}>\r\n                                        Vote Again\r\n                                    </Button>\r\n\r\n                        <CommentField\r\n                        classes={classes}\r\n                        comment={comment}\r\n                        commentsList={postInformation.data}\r\n                        token={token}\r\n                        username={username}\r\n                        handleChange={handleChange} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        )\r\n    }\r\n    return (\r\n        <Container className={classes.root} maxWidth='lg'>\r\n            <Grid container spacing={2}>\r\n                <SideBar\r\n                users={postInformation.data.userVotes}\r\n                profileImage={profileImage}\r\n                classes={classes} />\r\n\r\n                <Grid item xs={9}>\r\n                    <PostInfo\r\n                    classes={classes}\r\n                    profileImage={profileImage}\r\n                    postInfo={postInformation.data} />\r\n\r\n                    <p><b><font color=\"red\">{postInformation.revoting?\"NOTE: You have already voted for this post. Voting again will change your previous choice.\":\"\"}</font></b></p>\r\n\r\n                    <PostOptions\r\n                    classes={classes}\r\n                    option={option}\r\n                    handleChange={handleChange}\r\n                    postInfo={postInformation.data} />\r\n\r\n                    \r\n                    <VoteButton\r\n                    classes={classes}\r\n                    handleVote={handleVote} />\r\n\r\n                    <CommentField\r\n                    classes={classes}\r\n                    comment={comment}\r\n                    commentsList={postInformation.data}\r\n                    token={token}\r\n                    username={username}\r\n                    handleChange={handleChange} />\r\n\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PostView","import { FETCH_USER } from './types.js'\r\n\r\nexport const setUser = (username, token) => ({\r\n    type: FETCH_USER,\r\n    payload: {\r\n        username,\r\n        token\r\n    }\r\n})\r\n\r\n","export const FETCH_USER = 'fetch_user'\r\nexport const GET_USER = 'get_user'\r\nexport const SET_USER = 'set_user'","import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid, TextField, Button } from '@material-ui/core'\r\n\r\nimport { setUser } from '../../redux/actions/user'\r\nimport { postData } from '../../utilities/API'\r\n\r\nconst emailRegex = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction SignUp(props) {\r\n    const dispatch = useDispatch()\r\n\r\n    const redirectToTarget = (path) => {\r\n        props.history.push(path)\r\n    }\r\n\r\n    if (window.sessionStorage.username) {\r\n        const username = window.sessionStorage.username\r\n        const token = window.sessionStorage.token\r\n        dispatch(setUser(username, token))\r\n        redirectToTarget('/')\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [emailAddress, setEmailAddress] = useState('')\r\n    const [aboutMe, setAboutMe] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPass, setConfirmPass] = useState('')\r\n\r\n    const [touched, setTouched] = useState({\r\n        firstName: false,\r\n        lastName: false,\r\n        emailAddress: false,\r\n        aboutMe: false,\r\n        username: false,\r\n        password: false,\r\n        confirmPass: false\r\n    })\r\n\r\n    const handleBlur = event => {\r\n        const { name } = event.target\r\n        setTouched({...touched, [name]: true})\r\n    }\r\n    \r\n    const handleChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        switch(name) {\r\n            case 'firstName':\r\n                setFirstName(value)\r\n                break\r\n            case 'lastName':\r\n                setLastName(value)\r\n                break\r\n            case 'emailAddress':\r\n                setEmailAddress(value)\r\n                break\r\n            case 'aboutMe':\r\n                setAboutMe(value)\r\n                break\r\n            case 'username':\r\n                setUsername(value)\r\n                break\r\n            case 'password':\r\n                setPassword(value)\r\n                break\r\n            case 'confirmPass':\r\n                setConfirmPass(value)\r\n                break\r\n            default:\r\n        }\r\n    }\r\n\r\n    const handleSignUp = async () => {\r\n        try {\r\n            const data={ firstName, lastName, emailAddress, aboutMe, username, password }\r\n            const result = await postData('/account/u', data)\r\n            if (result.message === 'success') {\r\n                dispatch(setUser(username, result.token))\r\n                window.sessionStorage.username=username\r\n                window.sessionStorage.token=result.token\r\n                redirectToTarget('/')\r\n            }\r\n            else console.log(result)\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const validateEmail = () => {\r\n        const emailAddress = document.getElementById('emailAddress')\r\n        if (emailAddress) {\r\n            const { value } = emailAddress\r\n            if (value) return value.match(emailRegex)\r\n        }\r\n        return false\r\n    }\r\n\r\n    const validate = () => {\r\n        return {\r\n            firstName: firstName.length <= 0,\r\n            lastName: lastName.length <= 0,\r\n            emailAddress: emailAddress.length <= 0 || ! validateEmail(),\r\n            aboutMe: aboutMe.length <= 0,\r\n            username: username.length <= 0,\r\n            password: password.length <= 0,\r\n            confirmPass: confirmPass.length <= 0,\r\n            passwordMatch: password !== confirmPass\r\n        }\r\n    }\r\n\r\n    const errors = validate()\r\n\r\n    const shouldMarkError = field => {\r\n        const hasError = errors[field];\r\n        const shouldShow = touched[field];\r\n        return hasError ? shouldShow : false;\r\n    }\r\n\r\n    const isDisabled = Object.keys(errors)\r\n                             .filter(key => key !== 'aboutMe')\r\n                             .some(key => errors[key])\r\n\r\n    return (\r\n        <Container style={{ marginTop: '75px', marginLeft: '20%' }}>\r\n            <Grid container>\r\n                <h1>Sign up for Tindigo, and get to voting!</h1>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='first-name'\r\n                label='First Name'\r\n                name='firstName'\r\n                value={firstName}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('firstName') ? 'please provide your first name' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='last-name'\r\n                label='Last Name'\r\n                name='lastName'\r\n                value={lastName}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('lastName') ? 'please provide your last name' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='emailAddress'\r\n                label='Email Address'\r\n                name='emailAddress'\r\n                value={emailAddress}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('emailAddress') ? 'please provide a valid email address' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='about'\r\n                label='About'\r\n                name='aboutMe'\r\n                value={aboutMe}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('aboutMe') ? 'a description about you is not required' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='user-name'\r\n                label='User Name'\r\n                name='username'\r\n                value={username}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('username') ? 'please provide a user name' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='password'\r\n                label='Password'\r\n                name='password'\r\n                value={password}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('password') ? 'please provide a password' : password !== confirmPass && touched['password'] ? 'password must match the confirm password field' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='confirm-password'\r\n                label='Confirm Password'\r\n                name='confirmPass'\r\n                value={confirmPass}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('confirmPass') ? 'please confirm your password' : errors.passwordMatch && touched['confirmPass'] ? 'confirmation password must match the password field' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container style={{marginTop: '15px'}}>\r\n                <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                size='large'\r\n                disabled={isDisabled}\r\n                onClick={handleSignUp} >\r\n                    Sign Up\r\n                </Button>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default withRouter(SignUp)","import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setUser } from '../../redux/actions/user'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid, TextField, Button } from '@material-ui/core'\r\nimport { postData } from '../../utilities/API'\r\n\r\nimport LoginField from './LoginField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction Login(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const redirectToTarget = (path) => {\r\n        props.history.push(path);\r\n    }\r\n\r\n    if (window.sessionStorage.username) {\r\n        const username = window.sessionStorage.username\r\n        const token = window.sessionStorage.token\r\n        dispatch(setUser(username, token))\r\n        redirectToTarget('/')\r\n    }\r\n\r\n    const classes=useStyles()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const [touched, setTouched] = useState({\r\n        username: false,\r\n        password: false,\r\n    })\r\n\r\n    const handleBlur = event => {\r\n        const { name } = event.target\r\n        setTouched({...touched, [name]: true})\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        switch(name) {\r\n            case 'username':\r\n                setUsername(value)\r\n                break\r\n            case 'password':\r\n                setPassword(value)\r\n                break\r\n            default:\r\n        }\r\n    }\r\n\r\n    const [isIncorrect, setIncorrect] = useState(false)\r\n\r\n    const handleLogin = async () => {\r\n        const data={ username, password }\r\n        try {\r\n            const result = await postData('/account/signin', data)\r\n            if (result.message === 'success') {\r\n                dispatch(setUser(username, result.token))\r\n                window.sessionStorage.username=username\r\n                window.sessionStorage.token=result.token\r\n                redirectToTarget('/')\r\n            }\r\n            else {console.log(result)\r\n                setIncorrect(true)\r\n            \r\n            }\r\n\r\n        }\r\n        catch(error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        return {\r\n            username: username.length <= 0,\r\n            password: password.length <= 0\r\n        }\r\n    }\r\n\r\n    const errors = validate()\r\n\r\n    const shouldMarkError = field => {\r\n        const hasError = errors[field];\r\n        const shouldShow = touched[field];\r\n        return hasError ? shouldShow : false;\r\n    }\r\n\r\n    const isDisabled = Object.keys(errors)\r\n                             .filter(key => key !== 'about')\r\n                             .some(key => errors[key])\r\n\r\n    return (\r\n        <Container style={{ marginTop: '75px', marginLeft: '20%' }}>\r\n            <Grid container>\r\n                <h1>Login to Tindigo!</h1>\r\n            </Grid>\r\n            {isIncorrect ? <p style={{color : \"red\"}}>Incorrect username or password</p> : \"\"}\r\n    <Grid container>\r\n        <TextField\r\n            id='user-name'\r\n            label='User Name'\r\n            name='username'\r\n            value={username}\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            className={classes.textField}\r\n            helperText={shouldMarkError('username') ? 'please provide a user name' : ''}\r\n            onKeyPress={(ev) => {\r\n                if (ev.key === 'Enter') {\r\n                    handleLogin()\r\n                }\r\n              }}\r\n            margin='normal' />\r\n    </Grid>\r\n    <Grid container>\r\n        <TextField\r\n            id=\"standard-password-input\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"   \r\n            name='password'\r\n            value={password}\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            className={classes.textField}\r\n            helperText={shouldMarkError('username') ? 'please provide a user name' : ''}\r\n            onKeyPress={(ev) => {\r\n                if (ev.key === 'Enter') {\r\n                    handleLogin()\r\n                }\r\n              }}\r\n            margin='normal' />\r\n    </Grid>\r\n        \r\n\r\n            <Grid container>\r\n                <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                size='large'\r\n                disabled={isDisabled}\r\n                onClick={handleLogin} >\r\n                    Login\r\n                </Button>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default withRouter(Login)","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Container, Grid, Avatar,Button } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport profileImage from '../../assets/images/profile-pic-placeholder.png'\r\n\r\nimport { getData } from '../../utilities/API'\r\nimport PostList from '../PostList/PostListComponent'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    avatar: {\r\n        margin: 10,\r\n        width: 200,\r\n        height: 200,\r\n    },\r\n  }));\r\n\r\nfunction Profile(props) {\r\n    const classes = useStyles()\r\n    \r\n    const redirectToTarget = (path) => {\r\n        props.history.push(path);\r\n    }\r\n\r\n    let username, token\r\n    if (window.sessionStorage.username) {\r\n        username=window.sessionStorage.username\r\n        token=window.sessionStorage.token\r\n    }\r\n    \r\n    \r\n    function getQueryStringValue (key) {  \r\n        return decodeURIComponent(window.location.href.replace(new RegExp(\"^(?:.*[&\\\\?]\" + encodeURIComponent(key).replace(/[\\.\\+\\*]/g, \"\\\\$&\") + \"(?:\\\\=([^&]*))?)?.*$\", \"i\"), \"$1\"));  \r\n    }  \r\n\r\n    let searchQuery = getQueryStringValue(\"query\")\r\n    // meaning search intervals will be 10 entries\r\n    let searchIntervals = 10\r\n    \r\n\r\n    \r\n    const [searchInformation, setSearchInformation] = useState(0)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n    useEffect(() => {\r\n        \r\n        const loadSearchInformation = async () => {\r\n            let current = getQueryStringValue(\"entryIndex\")\r\n            if (!current){\r\n                current = 1\r\n            }\r\n\r\n            let loadedInfo = await getData('/post/search?tag=' + searchQuery + \"&begIndex=0%limit=\" + searchIntervals, token)\r\n            let size = loadedInfo.size\r\n            let numberOfPages = Math.ceil(size*1.0/searchIntervals)\r\n            \r\n\r\n            loadedInfo.postIdList = []\r\n            for(var i=0;i<loadedInfo.data.length;i++){\r\n                loadedInfo.postIdList.push(loadedInfo.data[i]._id)\r\n            }\r\n\r\n            setSearchInformation(loadedInfo)\r\n            setIsFetching(false)\r\n            console.log(loadedInfo)\r\n        }\r\n        loadSearchInformation()\r\n\r\n    }, [])\r\n   \r\n\r\n    return (\r\n        <Container>\r\n            <h1>Search results for \"{searchQuery}\"</h1>\r\n            \r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    \r\n                    <center>\r\n                        \r\n                        <h1>\r\n                        </h1></center>\r\n                    <PostList postIds={isFetching ? 0 : searchInformation.postIdList} token={token} username={username}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default withRouter(Profile);","import \"./App.css\";\r\n\r\nimport React from \"react\";\r\n// import { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { MuiThemeProvider } from \"@material-ui/core\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport { theme } from \"./themes/theme\";\r\n\r\nimport Header from './components/Header'\r\nimport Home from './pages/Home';\r\nimport Profile from './pages/Profile';\r\nimport PostCreate from \"./pages/PostCreate\";\r\nimport PostView from \"./pages/PostView\";\r\nimport SignUp from './pages/SignUp';\r\nimport Login from \"./pages/Login\";\r\nimport Search from \"./pages/Search\";\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/profile\" component={Profile} />\r\n        <Route path=\"/post/create\" component={PostCreate} />\r\n        <Route path=\"/post/view\" component={PostView} />\r\n        <Route path='/signup' component={SignUp} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/search' component={Search} />\r\n        \r\n        <div style = {{height:\"20vh\"}}> </div>\r\n      </BrowserRouter>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport user from './userReducer.js';\r\n\r\nexport default combineReducers({\r\n    user\r\n});","import { FETCH_USER } from '../actions/types';\r\n\r\nexport default (state = null, action) => {\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore } from 'redux';\r\nimport reducers from './redux/reducers';\r\n\r\nexport default createStore(reducers)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store.js';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/profile-pic-placeholder.543f1ecc.png\";"],"sourceRoot":""}