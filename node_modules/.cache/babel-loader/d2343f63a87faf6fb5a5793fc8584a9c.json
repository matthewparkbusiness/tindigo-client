{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\Tindigo\\\\client\\\\src\\\\pages\\\\PostView\\\\CommentField.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from '@material-ui/core/Container';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid, TextField, Divider } from '@material-ui/core';\nimport { getData, postData } from '../../utilities/API';\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nconst CommentField = props => {\n  const handleAddComment = event => {\n    if (event.key === 'Enter') {\n      console.log(\"hi\");\n\n      async function makeCommentRequest() {\n        const data = {\n          username: props.username,\n          comment: event.target.value\n        };\n        console.log(data);\n\n        try {\n          const result = await postData('/post/id/' + props.commentsList._id + \"/comment\", data, props.token);\n\n          if (result.message === 'success') {\n            window.location.reload();\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n\n      makeCommentRequest();\n    }\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    variant: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Comments\")), React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.commentsList.comments.length > 0 ? React.createElement(\"div\", {\n    class: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, props.commentsList.comments.map(comment => {\n    return React.createElement(CommentBlock, {\n      username: comment.username,\n      content: comment.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    });\n  })) : \"No posts at this time.\"), React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"comment\",\n    name: \"comment\",\n    value: props.comment,\n    onChange: props.handleChange,\n    label: \"Write a comment\",\n    className: props.classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    onKeyPress: handleAddComment,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })));\n};\n\nvar cardStyle = {\n  display: 'block',\n  width: '100vw'\n};\n\nfunction CommentBlock(props) {\n  const classes = useStyles();\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    style: cardStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"@\" + props.username), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, props.content)))));\n}\n\nexport default CommentField;","map":{"version":3,"sources":["C:\\Users\\Matt\\Documents\\GitHub\\Tindigo\\client\\src\\pages\\PostView\\CommentField.js"],"names":["React","useState","useEffect","makeStyles","withStyles","Container","GridList","GridListTile","Card","CardActions","CardContent","Button","Typography","Grid","TextField","Divider","getData","postData","useStyles","card","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","CommentField","props","handleAddComment","event","key","console","log","makeCommentRequest","data","username","comment","target","value","result","commentsList","_id","token","message","window","location","reload","error","comments","length","map","content","handleChange","classes","textField","cardStyle","width","CommentBlock"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,OAA1B,QAAyC,mBAAzC;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,qBAAlC;AAGA,MAAMC,SAAS,GAAGf,UAAU,CAAC;AACzBgB,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADmB;AAIzBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,cADH;AAENC,IAAAA,MAAM,EAAE,OAFF;AAGNC,IAAAA,SAAS,EAAE;AAHL,GAJiB;AASzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GATkB;AAYzBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,YAAY,EAAE;AADX;AAZoB,CAAD,CAA5B;;AAiBA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAE1B,QAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAC9B,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,qBAAeC,kBAAf,GAAmC;AAC/B,cAAMC,IAAI,GAAC;AAAEC,UAAAA,QAAQ,EAACR,KAAK,CAACQ,QAAjB;AAA2BC,UAAAA,OAAO,EAACP,KAAK,CAACQ,MAAN,CAAaC;AAAhD,SAAX;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;;AACA,YAAI;AACA,gBAAMK,MAAM,GAAG,MAAMzB,QAAQ,CAAC,cAAca,KAAK,CAACa,YAAN,CAAmBC,GAAjC,GAAuC,UAAxC,EAAoDP,IAApD,EAA0DP,KAAK,CAACe,KAAhE,CAA7B;;AACA,cAAIH,MAAM,CAACI,OAAP,KAAmB,SAAvB,EAAkC;AAE9BC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AAEJ,SAPD,CAQA,OAAMC,KAAN,EAAa;AACThB,UAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACH;AACJ;;AACDd,MAAAA,kBAAkB;AAErB;AACJ,GArBD;;AAuBA,SAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAFJ,EAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCN,KAAK,CAACa,YAAN,CAAmBQ,QAAnB,CAA4BC,MAA5B,GAAqC,CAArC,GACA;AAAK,IAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACItB,KAAK,CAACa,YAAN,CAAmBQ,QAAnB,CAA4BE,GAA5B,CAAgCd,OAAO,IAAI;AACxC,WACI,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAEA,OAAO,CAACD,QAAhC;AAA0C,MAAA,OAAO,EAAEC,OAAO,CAACe,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJA,CADJ,CADA,GASA,wBAVD,CANJ,EAmBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACA,IAAA,EAAE,EAAC,SADH;AAEA,IAAA,IAAI,EAAC,SAFL;AAGA,IAAA,KAAK,EAAExB,KAAK,CAACS,OAHb;AAIA,IAAA,QAAQ,EAAET,KAAK,CAACyB,YAJhB;AAKA,IAAA,KAAK,EAAC,iBALN;AAMA,IAAA,SAAS,EAAEzB,KAAK,CAAC0B,OAAN,CAAcC,SANzB;AAOA,IAAA,MAAM,EAAC,QAPP;AAQA,IAAA,OAAO,EAAC,UARR;AASA,IAAA,UAAU,EAAE1B,gBATZ;AAUA,IAAA,SAAS,EAAE,IAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAnBJ,CAFJ;AAoCH,CA7DD;;AAiEA,IAAI2B,SAAS,GAAG;AACZpC,EAAAA,OAAO,EAAE,OADG;AAEZqC,EAAAA,KAAK,EAAE;AAFK,CAAhB;;AAKA,SAASC,YAAT,CAAsB9B,KAAtB,EAA6B;AAEzB,QAAM0B,OAAO,GAAGtC,SAAS,EAAzB;AAEA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEsC,OAAO,CAACrC,IAAzB;AAA+B,IAAA,KAAK,EAAEuC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,OAAO,CAAC/B,KAA/B;AAAsC,IAAA,KAAK,EAAC,eAA5C;AAA4D,IAAA,YAAY,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,MAAMK,KAAK,CAACQ,QADjB,CADA,EAKA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,KAAK,CAACwB,OADX,CALA,CAFR,CADJ,CADJ,CADJ;AAqBH;;AAED,eAAezB,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid, TextField, Divider } from '@material-ui/core'\r\nimport { getData, postData } from '../../utilities/API'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n\r\nconst CommentField = props => {\r\n\r\n    const handleAddComment = event => {\r\n        if (event.key === 'Enter') {\r\n            console.log(\"hi\")\r\n            async function makeCommentRequest(){\r\n                const data={ username:props.username, comment:event.target.value }\r\n                console.log(data)\r\n                try {\r\n                    const result = await postData('/post/id/' + props.commentsList._id + \"/comment\", data, props.token)\r\n                    if (result.message === 'success') {\r\n                        \r\n                        window.location.reload()\r\n                    }\r\n\r\n                }\r\n                catch(error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            makeCommentRequest()\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <Grid container>\r\n            <Divider variant=\"middle\" />\r\n            <Grid item xs={10}>\r\n\r\n                <h1>Comments</h1>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n            {props.commentsList.comments.length > 0?\r\n            (<div class='row'>\r\n                {props.commentsList.comments.map(comment => {\r\n                    return (\r\n                        <CommentBlock username={comment.username} content={comment.content}/>\r\n                    )\r\n                })}\r\n            </div>):\r\n            \r\n            (\"No posts at this time.\")}\r\n            </Grid>\r\n\r\n            <Grid item xs={10}>\r\n                <TextField\r\n                id=\"comment\"\r\n                name=\"comment\"\r\n                value={props.comment}\r\n                onChange={props.handleChange}\r\n                label=\"Write a comment\"\r\n                className={props.classes.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                onKeyPress={handleAddComment}\r\n                fullWidth={true} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\nvar cardStyle = {\r\n    display: 'block',\r\n    width: '100vw'\r\n}\r\n\r\nfunction CommentBlock(props) {\r\n    \r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <Container>\r\n            <Grid container>\r\n                <Card className={classes.card} style={cardStyle}>\r\n                    \r\n                        <CardContent>\r\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                            {\"@\" + props.username}\r\n                        </Typography>\r\n                        \r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            {props.content}\r\n                        </Typography>\r\n                        \r\n                    </CardContent>\r\n\r\n                </Card>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default CommentField"]},"metadata":{},"sourceType":"module"}