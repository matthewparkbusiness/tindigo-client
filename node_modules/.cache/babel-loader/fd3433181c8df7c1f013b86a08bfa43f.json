{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\Tindigo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\Tindigo\\\\client\\\\src\\\\pages\\\\Profile\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Grid, Avatar, Fab } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { makeStyles } from '@material-ui/core/styles';\nimport profileImage from '../../assets/images/profile-pic-placeholder.png';\nimport { getData } from '../../utilities/API';\nimport PostList from '../PostList/PostListComponent';\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    margin: 10,\n    width: 200,\n    height: 200\n  }\n}));\n\nfunction Profile(props) {\n  const classes = useStyles();\n\n  const redirectToTarget = path => {\n    props.history.push(path);\n  };\n\n  let username, token;\n\n  if (window.sessionStorage.username) {\n    username = window.sessionStorage.username;\n    token = window.sessionStorage.token;\n  } else {\n    redirectToTarget('/');\n  }\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        accountInformation = _useState2[0],\n        setAccountInformation = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isFetching = _useState4[0],\n        setIsFetching = _useState4[1];\n\n  useEffect(() => {\n    const loadAccountInformation = async () => {\n      let loadedInfo = await getData('/account/u/' + username, token);\n      let date = new Date(loadedInfo.data.dateCreated);\n      let year = date.getFullYear();\n      let month = date.getMonth() + 1;\n      let dt = date.getDate();\n      loadedInfo.data.dateCreatedFormatted = month + \"/\" + dt + \"/\" + year;\n      setAccountInformation(loadedInfo);\n      setIsFetching(false);\n      console.log(loadedInfo);\n    };\n\n    loadAccountInformation();\n  }, []);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      height: \"5vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \" \"), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: \"Profile Pic Placeholder\",\n    src: profileImage,\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, isFetching ? \"Loading your account...\" : accountInformation.data.firstName + \" \" + accountInformation.data.lastName, \"\\xA0  \\xA0\", React.createElement(Fab, {\n    color: \"secondary\",\n    \"aria-label\": \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"@\" + username), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"About me\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, !isFetching && accountInformation.data.aboutMe ? accountInformation.data.aboutMe : \"This user has no about me.\"))), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Your Posts\"), React.createElement(PostList, {\n    postIds: isFetching ? 0 : accountInformation.data.posts,\n    token: token,\n    username: username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))));\n}\n\nexport default withRouter(Profile);\n/*\r\nclass Profile extends React.Component {\r\n\r\n    \r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        \r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        \r\n\r\n        const redirectToTarget = (path) => {\r\n            props.history.push(path);\r\n        }\r\n    \r\n        let username, token\r\n        if (window.sessionStorage.username) {\r\n            username=window.sessionStorage.username\r\n            token=window.sessionStorage.token\r\n        }\r\n        else {\r\n            redirectToTarget('/')\r\n        }\r\n\r\n        \r\n        let accountInformation, isFetching\r\n        isFetching = true\r\n        const loadAccountInformation = async () => {\r\n            accountInformation = await getData('/account/u/' + this.state.username, this.state.props.token)\r\n            isFetching = false\r\n            this.setState({data:accountInformation, fetching : isFetching})\r\n            console.log(accountInformation)\r\n        }\r\n        loadAccountInformation()\r\n\r\n        return {\r\n            username : username,\r\n            token : token\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    //<h1>{this.state.isFetching ? \"Loading your account...\" : this.state.accountInformation.data.firstName + \" \" + this.state.accountInformation.data.lastName}</h1>\r\n                        \r\n    render() {\r\n        \r\n        let classes = useStyles()\r\n\r\n        return (\r\n            <Container>\r\n                <h1>Welcome to Tindigo!</h1>\r\n                <Grid container>\r\n                    <Grid item xs={4}>\r\n                        <Avatar\r\n                        alt=\"Profile Pic Placeholder\"\r\n                        src={profileImage}\r\n                        className={classes.avatar} />\r\n                    </Grid>\r\n    \r\n                    <Grid item xs={8}>\r\n                        \r\n                        <h2>{this.state.username}</h2>\r\n                        <h3>About me</h3>\r\n                        <p>Fugiat aute dolore dolore aliquip nulla fugiat laboris esse. Exercitation occaecat nulla fugiat magna occaecat ut sit fugiat culpa eu occaecat. Velit qui velit cupidatat anim tempor cillum aliqua ut magna velit ad. Cillum enim et deserunt nostrud ut eiusmod qui elit. Nostrud ea Lorem laborum ea amet elit minim.</p>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <h1>Your Posts</h1>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        );\r\n    }\r\n}*/","map":{"version":3,"sources":["C:\\Users\\Matt\\Documents\\GitHub\\Tindigo\\client\\src\\pages\\Profile\\index.js"],"names":["React","useState","useEffect","withRouter","Container","Grid","Avatar","Fab","EditIcon","makeStyles","profileImage","getData","PostList","useStyles","theme","avatar","margin","width","height","Profile","props","classes","redirectToTarget","path","history","push","username","token","window","sessionStorage","accountInformation","setAccountInformation","isFetching","setIsFetching","loadAccountInformation","loadedInfo","date","Date","data","dateCreated","year","getFullYear","month","getMonth","dt","getDate","dateCreatedFormatted","console","log","firstName","lastName","aboutMe","posts"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Container, Grid, Avatar, Fab } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport profileImage from '../../assets/images/profile-pic-placeholder.png';\r\n\r\nimport { getData } from '../../utilities/API';\r\nimport PostList from '../PostList/PostListComponent';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    avatar: {\r\n        margin: 10,\r\n        width: 200,\r\n        height: 200,\r\n    },\r\n  }));\r\n\r\nfunction Profile(props) {\r\n    const classes = useStyles()\r\n    \r\n    const redirectToTarget = (path) => {\r\n        props.history.push(path);\r\n    }\r\n\r\n    let username, token\r\n    if (window.sessionStorage.username) {\r\n        username=window.sessionStorage.username\r\n        token=window.sessionStorage.token\r\n    }\r\n    else {\r\n        redirectToTarget('/')\r\n    }\r\n\r\n    \r\n    const [accountInformation, setAccountInformation] = useState(0)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n    useEffect(() => {\r\n        \r\n        const loadAccountInformation = async () => {\r\n            let loadedInfo = await getData('/account/u/' + username, token)\r\n\r\n            let date = new Date(loadedInfo.data.dateCreated);\r\n            let year = date.getFullYear();\r\n            let month = date.getMonth()+1;\r\n            let dt = date.getDate();\r\n\r\n            loadedInfo.data.dateCreatedFormatted = month + \"/\" + dt + \"/\" + year;\r\n\r\n            setAccountInformation(loadedInfo)\r\n            setIsFetching(false)\r\n            console.log(loadedInfo)\r\n        }\r\n        loadAccountInformation()\r\n\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <Container>\r\n            \r\n            <div style = {{height:\"5vh\"}}> </div>\r\n            <Grid container>\r\n                <Grid item xs={3}>\r\n                    <Avatar\r\n                    alt=\"Profile Pic Placeholder\"\r\n                    src={profileImage}\r\n                    className={classes.avatar} />\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <h1>{isFetching ? \"Loading your account...\" : accountInformation.data.firstName + \" \" + accountInformation.data.lastName}\r\n                    &nbsp;\t\t&nbsp;\r\n                        <Fab color=\"secondary\" aria-label=\"edit\">\r\n                            <EditIcon />\r\n                        </Fab>\r\n                    </h1>\r\n                \r\n                    <h2>{\"@\" + username}</h2> \r\n                    \r\n\r\n                    <h3>About me</h3>\r\n                    <p>{!isFetching && accountInformation.data.aboutMe ? accountInformation.data.aboutMe : \"This user has no about me.\"}</p>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <h1>Your Posts</h1>\r\n                    <PostList postIds={isFetching ? 0 : accountInformation.data.posts} token={token} username={username}/>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default withRouter(Profile);\r\n\r\n\r\n\r\n/*\r\nclass Profile extends React.Component {\r\n\r\n    \r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        \r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        \r\n\r\n        const redirectToTarget = (path) => {\r\n            props.history.push(path);\r\n        }\r\n    \r\n        let username, token\r\n        if (window.sessionStorage.username) {\r\n            username=window.sessionStorage.username\r\n            token=window.sessionStorage.token\r\n        }\r\n        else {\r\n            redirectToTarget('/')\r\n        }\r\n\r\n        \r\n        let accountInformation, isFetching\r\n        isFetching = true\r\n        const loadAccountInformation = async () => {\r\n            accountInformation = await getData('/account/u/' + this.state.username, this.state.props.token)\r\n            isFetching = false\r\n            this.setState({data:accountInformation, fetching : isFetching})\r\n            console.log(accountInformation)\r\n        }\r\n        loadAccountInformation()\r\n\r\n        return {\r\n            username : username,\r\n            token : token\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    //<h1>{this.state.isFetching ? \"Loading your account...\" : this.state.accountInformation.data.firstName + \" \" + this.state.accountInformation.data.lastName}</h1>\r\n                        \r\n    render() {\r\n        \r\n        let classes = useStyles()\r\n\r\n        return (\r\n            <Container>\r\n                <h1>Welcome to Tindigo!</h1>\r\n                <Grid container>\r\n                    <Grid item xs={4}>\r\n                        <Avatar\r\n                        alt=\"Profile Pic Placeholder\"\r\n                        src={profileImage}\r\n                        className={classes.avatar} />\r\n                    </Grid>\r\n    \r\n                    <Grid item xs={8}>\r\n                        \r\n                        <h2>{this.state.username}</h2>\r\n                        <h3>About me</h3>\r\n                        <p>Fugiat aute dolore dolore aliquip nulla fugiat laboris esse. Exercitation occaecat nulla fugiat magna occaecat ut sit fugiat culpa eu occaecat. Velit qui velit cupidatat anim tempor cillum aliqua ut magna velit ad. Cillum enim et deserunt nostrud ut eiusmod qui elit. Nostrud ea Lorem laborum ea amet elit minim.</p>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <h1>Your Posts</h1>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        );\r\n    }\r\n}*/\r\n"]},"metadata":{},"sourceType":"module"}