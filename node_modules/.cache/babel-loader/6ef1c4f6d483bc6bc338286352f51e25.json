{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\Tindigo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\Tindigo\\\\client\\\\src\\\\pages\\\\Home\\\\index.js\";\nimport './Home.css';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Grid } from '@material-ui/core';\nimport { getData } from '../../utilities/API';\nimport PostList from '../PostList/PostListComponent';\n\nfunction Home(props) {\n  let username, token;\n\n  if (window.sessionStorage.username) {\n    username = window.sessionStorage.username;\n    token = window.sessionStorage.token;\n  }\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        accountInformation = _useState2[0],\n        setAccountInformation = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isFetching = _useState4[0],\n        setIsFetching = _useState4[1];\n\n  useEffect(() => {\n    const loadAccountInformation = async () => {\n      if (username) {\n        let loadedInfo = await getData('/account/u/' + username, token);\n        setAccountInformation(loadedInfo);\n        setIsFetching(false);\n      }\n    };\n\n    loadAccountInformation();\n  }, []);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      height: \"20vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" \"), React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      color: \"#99\",\n      fontSize: \"70px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, username ? \"Welcome @\".concat(username, \"!\") : React.createElement(React.Fragment, null, \"Welcome To Tindigo\")), React.createElement(\"p\", {\n    style: {\n      color: \"#99\",\n      fontSize: \"40px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \" Voting made fast and easy... \"), React.createElement(\"p\", {\n    style: {\n      color: \"#99\",\n      fontSize: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, username ? \"\" : React.createElement(React.Fragment, null, React.createElement(Link, {\n    id: \"new-person-link\",\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Log in\"), \" or \", React.createElement(Link, {\n    id: \"new-person-link\",\n    to: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"create an account!\")))))), username ? React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Your Recent Posts\")), isFetching ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }) : accountInformation.data.posts.length == 0 ? \"You have no posts right now.\" : React.createElement(PostList, {\n    postIds: isFetching ? 0 : accountInformation.data.posts,\n    token: token,\n    username: username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })) : '');\n}\n\nexport default Home;","map":{"version":3,"sources":["C:\\Users\\Matt\\Documents\\GitHub\\Tindigo\\client\\src\\pages\\Home\\index.js"],"names":["React","useState","useEffect","Link","Container","Grid","getData","PostList","Home","props","username","token","window","sessionStorage","accountInformation","setAccountInformation","isFetching","setIsFetching","loadAccountInformation","loadedInfo","height","color","fontSize","data","posts","length"],"mappings":"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","sourcesContent":["import './Home.css'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Container, Grid } from '@material-ui/core';\r\n\r\nimport { getData } from '../../utilities/API'\r\nimport PostList from '../PostList/PostListComponent'\r\n\r\nfunction Home(props) {\r\n\r\n    let username, token\r\n    if (window.sessionStorage.username) {\r\n        username = window.sessionStorage.username\r\n        token = window.sessionStorage.token\r\n    }\r\n\r\n    const [accountInformation, setAccountInformation] = useState(0)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n    useEffect(() => {\r\n        \r\n        const loadAccountInformation = async () => {\r\n            if(username){\r\n                let loadedInfo = await getData('/account/u/' + username, token)\r\n                setAccountInformation(loadedInfo)\r\n                setIsFetching(false)\r\n            }\r\n            \r\n        }\r\n        loadAccountInformation()\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        \r\n        <Container>\r\n            <div style = {{height:\"20vh\"}}> </div>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                <center>\r\n                    <p style={ {color : \"#99\", fontSize : \"70px\"} }>\r\n                        {username ?\r\n                        `Welcome @${username}!` :\r\n                        (<>Welcome To Tindigo \r\n                        \r\n                        </>)}\r\n                    </p>\r\n                    <p style={ {color : \"#99\", fontSize : \"40px\"} }> Voting made fast and easy... </p>\r\n                    <p style={ {color : \"#99\", fontSize : \"15px\"} }>\r\n                        {username ?\r\n                        `` :\r\n                        (<><Link id='new-person-link' to='/login'>Log in</Link> or <Link id='new-person-link' to='/signup'>create an account!</Link>\r\n                        \r\n                        </>)}\r\n                        \r\n                    </p>\r\n                    </center>\r\n                </Grid>\r\n            </Grid>\r\n            {username ? (\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <h1>Your Recent Posts</h1>\r\n                    </Grid>\r\n                    {isFetching ? <div></div> : (accountInformation.data.posts.length == 0 ? \"You have no posts right now.\" : <PostList postIds={isFetching ? 0 : accountInformation.data.posts} token={token} username={username}/>)}\r\n                    \r\n                </Grid> ) : '' \r\n            }\r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}