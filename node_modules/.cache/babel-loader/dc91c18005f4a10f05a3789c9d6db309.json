{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\Tindigo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\Tindigo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\Tindigo\\\\client\\\\src\\\\pages\\\\SignUp\\\\index.js\";\nimport React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, TextField, Button } from '@material-ui/core';\nimport { setUser } from '../../redux/actions/user';\nimport { postData } from '../../utilities/API';\nconst emailRegex = /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction SignUp(props) {\n  const dispatch = useDispatch();\n\n  const redirectToTarget = path => {\n    props.history.push(path);\n  };\n\n  if (window.sessionStorage.username) {\n    const username = window.sessionStorage.username;\n    const token = window.sessionStorage.token;\n    dispatch(setUser(username, token));\n    redirectToTarget('/');\n  }\n\n  const classes = useStyles();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        emailAddress = _useState6[0],\n        setEmailAddress = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        aboutMe = _useState8[0],\n        setAboutMe = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        username = _useState10[0],\n        setUsername = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        password = _useState12[0],\n        setPassword = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        confirmPass = _useState14[0],\n        setConfirmPass = _useState14[1];\n\n  const _useState15 = useState({\n    firstName: false,\n    lastName: false,\n    emailAddress: false,\n    aboutMe: false,\n    username: false,\n    password: false,\n    confirmPass: false\n  }),\n        _useState16 = _slicedToArray(_useState15, 2),\n        touched = _useState16[0],\n        setTouched = _useState16[1];\n\n  const handleBlur = event => {\n    const name = event.target.name;\n    setTouched(_objectSpread({}, touched, {\n      [name]: true\n    }));\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n    switch (name) {\n      case 'firstName':\n        setFirstName(value);\n        break;\n\n      case 'lastName':\n        setLastName(value);\n        break;\n\n      case 'emailAddress':\n        setEmailAddress(value);\n        break;\n\n      case 'aboutMe':\n        setAboutMe(value);\n        break;\n\n      case 'username':\n        setUsername(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      case 'confirmPass':\n        setConfirmPass(value);\n        break;\n\n      default:\n    }\n  };\n\n  const handleSignUp = async () => {\n    try {\n      const data = {\n        firstName,\n        lastName,\n        emailAddress,\n        aboutMe,\n        username,\n        password\n      };\n      const result = await postData('/account/u', data);\n\n      if (result.message === 'success') {\n        dispatch(setUser(username, result.token));\n        window.sessionStorage.username = username;\n        window.sessionStorage.token = result.token;\n        redirectToTarget('/');\n      } else console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const validateEmail = () => {\n    const emailAddress = document.getElementById('emailAddress');\n\n    if (emailAddress) {\n      const value = emailAddress.value;\n      if (value) return value.match(emailRegex);\n    }\n\n    return false;\n  };\n\n  const validate = () => {\n    return {\n      firstName: firstName.length <= 0,\n      lastName: lastName.length <= 0,\n      emailAddress: emailAddress.length <= 0 || !validateEmail(),\n      aboutMe: aboutMe.length <= 0,\n      username: username.length <= 0,\n      password: password.length <= 0,\n      confirmPass: confirmPass.length <= 0,\n      passwordMatch: password !== confirmPass\n    };\n  };\n\n  const errors = validate();\n\n  const shouldMarkError = field => {\n    const hasError = errors[field];\n    const shouldShow = touched[field];\n    return hasError ? shouldShow : false;\n  };\n\n  const isDisabled = Object.keys(errors).filter(key => key !== 'aboutMe').some(key => errors[key]);\n  return React.createElement(Container, {\n    style: {\n      marginTop: '75px',\n      marginLeft: '20%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Sign up for Tindigo, and get to voting!\")), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"first-name\",\n    label: \"First Name\",\n    name: \"firstName\",\n    value: firstName,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    className: classes.textField,\n    helperText: shouldMarkError('firstName') ? 'please provide your first name' : '',\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"last-name\",\n    label: \"Last Name\",\n    name: \"lastName\",\n    value: lastName,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    className: classes.textField,\n    helperText: shouldMarkError('lastName') ? 'please provide your last name' : '',\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"emailAddress\",\n    label: \"Email Address\",\n    name: \"emailAddress\",\n    value: emailAddress,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    className: classes.textField,\n    helperText: shouldMarkError('emailAddress') ? 'please provide a valid email address' : '',\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"about\",\n    label: \"About\",\n    name: \"aboutMe\",\n    value: aboutMe,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    className: classes.textField,\n    helperText: shouldMarkError('aboutMe') ? 'a description about you is not required' : '',\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"user-name\",\n    label: \"User Name\",\n    name: \"username\",\n    value: username,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    className: classes.textField,\n    helperText: shouldMarkError('username') ? 'please provide a user name' : '',\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"password\",\n    label: \"Password\",\n    name: \"password\",\n    value: password,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    className: classes.textField,\n    helperText: shouldMarkError('password') ? 'please provide a password' : password !== confirmPass && touched['password'] ? 'password must match the confirm password field' : '',\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"confirm-password\",\n    label: \"Confirm Password\",\n    name: \"confirmPass\",\n    value: confirmPass,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    className: classes.textField,\n    helperText: shouldMarkError('confirmPass') ? 'please confirm your password' : errors.passwordMatch && touched['confirmPass'] ? 'confirmation password must match the password field' : '',\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    style: {\n      marginTop: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    size: \"large\",\n    disabled: isDisabled,\n    onClick: handleSignUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, \"Sign Up\")));\n}\n\nexport default withRouter(SignUp);","map":{"version":3,"sources":["C:\\Users\\Matt\\Documents\\GitHub\\Tindigo\\client\\src\\pages\\SignUp\\index.js"],"names":["React","useState","withRouter","useDispatch","makeStyles","Container","Grid","TextField","Button","setUser","postData","emailRegex","useStyles","theme","textField","marginLeft","spacing","marginRight","width","button","margin","SignUp","props","dispatch","redirectToTarget","path","history","push","window","sessionStorage","username","token","classes","firstName","setFirstName","lastName","setLastName","emailAddress","setEmailAddress","aboutMe","setAboutMe","setUsername","password","setPassword","confirmPass","setConfirmPass","touched","setTouched","handleBlur","event","name","target","handleChange","value","handleSignUp","data","result","message","console","log","error","validateEmail","document","getElementById","match","validate","length","passwordMatch","errors","shouldMarkError","field","hasError","shouldShow","isDisabled","Object","keys","filter","key","some","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid, TextField, Button } from '@material-ui/core'\r\n\r\nimport { setUser } from '../../redux/actions/user'\r\nimport { postData } from '../../utilities/API'\r\n\r\nconst emailRegex = /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction SignUp(props) {\r\n    const dispatch = useDispatch()\r\n\r\n    const redirectToTarget = (path) => {\r\n        props.history.push(path)\r\n    }\r\n\r\n    if (window.sessionStorage.username) {\r\n        const username = window.sessionStorage.username\r\n        const token = window.sessionStorage.token\r\n        dispatch(setUser(username, token))\r\n        redirectToTarget('/')\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [emailAddress, setEmailAddress] = useState('')\r\n    const [aboutMe, setAboutMe] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPass, setConfirmPass] = useState('')\r\n\r\n    const [touched, setTouched] = useState({\r\n        firstName: false,\r\n        lastName: false,\r\n        emailAddress: false,\r\n        aboutMe: false,\r\n        username: false,\r\n        password: false,\r\n        confirmPass: false\r\n    })\r\n\r\n    const handleBlur = event => {\r\n        const { name } = event.target\r\n        setTouched({...touched, [name]: true})\r\n    }\r\n    \r\n    const handleChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        switch(name) {\r\n            case 'firstName':\r\n                setFirstName(value)\r\n                break\r\n            case 'lastName':\r\n                setLastName(value)\r\n                break\r\n            case 'emailAddress':\r\n                setEmailAddress(value)\r\n                break\r\n            case 'aboutMe':\r\n                setAboutMe(value)\r\n                break\r\n            case 'username':\r\n                setUsername(value)\r\n                break\r\n            case 'password':\r\n                setPassword(value)\r\n                break\r\n            case 'confirmPass':\r\n                setConfirmPass(value)\r\n                break\r\n            default:\r\n        }\r\n    }\r\n\r\n    const handleSignUp = async () => {\r\n        try {\r\n            const data={ firstName, lastName, emailAddress, aboutMe, username, password }\r\n            const result = await postData('/account/u', data)\r\n            if (result.message === 'success') {\r\n                dispatch(setUser(username, result.token))\r\n                window.sessionStorage.username=username\r\n                window.sessionStorage.token=result.token\r\n                redirectToTarget('/')\r\n            }\r\n            else console.log(result)\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const validateEmail = () => {\r\n        const emailAddress = document.getElementById('emailAddress')\r\n        if (emailAddress) {\r\n            const { value } = emailAddress\r\n            if (value) return value.match(emailRegex)\r\n        }\r\n        return false\r\n    }\r\n\r\n    const validate = () => {\r\n        return {\r\n            firstName: firstName.length <= 0,\r\n            lastName: lastName.length <= 0,\r\n            emailAddress: emailAddress.length <= 0 || ! validateEmail(),\r\n            aboutMe: aboutMe.length <= 0,\r\n            username: username.length <= 0,\r\n            password: password.length <= 0,\r\n            confirmPass: confirmPass.length <= 0,\r\n            passwordMatch: password !== confirmPass\r\n        }\r\n    }\r\n\r\n    const errors = validate()\r\n\r\n    const shouldMarkError = field => {\r\n        const hasError = errors[field];\r\n        const shouldShow = touched[field];\r\n        return hasError ? shouldShow : false;\r\n    }\r\n\r\n    const isDisabled = Object.keys(errors)\r\n                             .filter(key => key !== 'aboutMe')\r\n                             .some(key => errors[key])\r\n\r\n    return (\r\n        <Container style={{ marginTop: '75px', marginLeft: '20%' }}>\r\n            <Grid container>\r\n                <h1>Sign up for Tindigo, and get to voting!</h1>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='first-name'\r\n                label='First Name'\r\n                name='firstName'\r\n                value={firstName}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('firstName') ? 'please provide your first name' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='last-name'\r\n                label='Last Name'\r\n                name='lastName'\r\n                value={lastName}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('lastName') ? 'please provide your last name' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='emailAddress'\r\n                label='Email Address'\r\n                name='emailAddress'\r\n                value={emailAddress}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('emailAddress') ? 'please provide a valid email address' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='about'\r\n                label='About'\r\n                name='aboutMe'\r\n                value={aboutMe}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('aboutMe') ? 'a description about you is not required' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='user-name'\r\n                label='User Name'\r\n                name='username'\r\n                value={username}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('username') ? 'please provide a user name' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='password'\r\n                label='Password'\r\n                name='password'\r\n                value={password}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('password') ? 'please provide a password' : password !== confirmPass && touched['password'] ? 'password must match the confirm password field' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <TextField\r\n                id='confirm-password'\r\n                label='Confirm Password'\r\n                name='confirmPass'\r\n                value={confirmPass}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={classes.textField}\r\n                helperText={shouldMarkError('confirmPass') ? 'please confirm your password' : errors.passwordMatch && touched['confirmPass'] ? 'confirmation password must match the password field' : ''}\r\n                margin='normal' />\r\n            </Grid>\r\n\r\n            <Grid container style={{marginTop: '15px'}}>\r\n                <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                size='large'\r\n                disabled={isDisabled}\r\n                onClick={handleSignUp} >\r\n                    Sign Up\r\n                </Button>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default withRouter(SignUp)"]},"metadata":{},"sourceType":"module"}