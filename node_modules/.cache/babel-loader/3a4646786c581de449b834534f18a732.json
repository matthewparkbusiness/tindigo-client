{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\Tindigo\\\\client\\\\src\\\\pages\\\\PostCreate\\\\Fields\\\\VotingOptions.js\";\nimport React from 'react';\nimport { TextField, Button, Icon } from '@material-ui/core';\n\nfunction VotingOptionsField(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"option-input\",\n    className: props.classes.textField,\n    label: \"Voting Option\",\n    onBlur: props.handleBlur('options'),\n    helperText: props.shouldMarkError('options') ? props.messages.options : '',\n    onKeyPress: ev => {\n      if (ev.key === 'Enter') {\n        props.handleAddOptionForTextField(ev);\n      }\n    },\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: props.classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: props.handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Add option\")), React.createElement(\"div\", {\n    id: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.options.map(el => {\n    return React.createElement(Button, {\n      key: el,\n      value: \"option\",\n      className: props.classes.button,\n      variant: \"contained\",\n      color: \"primary\",\n      startIcon: React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"close\"),\n      size: \"medium\",\n      onClick: props.handleRemove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, el);\n  })));\n}\n\nexport default VotingOptionsField;","map":{"version":3,"sources":["C:\\Users\\Matt\\Documents\\GitHub\\Tindigo\\client\\src\\pages\\PostCreate\\Fields\\VotingOptions.js"],"names":["React","TextField","Button","Icon","VotingOptionsField","props","classes","textField","handleBlur","shouldMarkError","messages","options","ev","key","handleAddOptionForTextField","button","handleAdd","map","el","handleRemove"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,QAAwC,mBAAxC;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACA,IAAA,EAAE,EAAC,cADH;AAEA,IAAA,SAAS,EAAEA,KAAK,CAACC,OAAN,CAAcC,SAFzB;AAGA,IAAA,KAAK,EAAC,eAHN;AAIA,IAAA,MAAM,EAAEF,KAAK,CAACG,UAAN,CAAiB,SAAjB,CAJR;AAKA,IAAA,UAAU,EAAEH,KAAK,CAACI,eAAN,CAAsB,SAAtB,IAAmCJ,KAAK,CAACK,QAAN,CAAeC,OAAlD,GAA4D,EALxE;AAMA,IAAA,UAAU,EAAGC,EAAD,IAAQ;AAChB,UAAIA,EAAE,CAACC,GAAH,KAAW,OAAf,EAAwB;AACpBR,QAAAA,KAAK,CAACS,2BAAN,CAAkCF,EAAlC;AACH;AACF,KAVH;AAWA,IAAA,MAAM,EAAC,QAXP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAcI,oBAAC,MAAD;AACA,IAAA,SAAS,EAAEP,KAAK,CAACC,OAAN,CAAcS,MADzB;AAEA,IAAA,OAAO,EAAC,WAFR;AAGA,IAAA,KAAK,EAAC,SAHN;AAIA,IAAA,IAAI,EAAC,OAJL;AAKA,IAAA,OAAO,EAAEV,KAAK,CAACW,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,CADJ,EAyBI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCX,KAAK,CAACM,OAAN,CAAcM,GAAd,CAAkBC,EAAE,IAAI;AACjB,WACI,oBAAC,MAAD;AACA,MAAA,GAAG,EAAEA,EADL;AAEA,MAAA,KAAK,EAAC,QAFN;AAGA,MAAA,SAAS,EAAEb,KAAK,CAACC,OAAN,CAAcS,MAHzB;AAIA,MAAA,OAAO,EAAC,WAJR;AAKA,MAAA,KAAK,EAAC,SALN;AAMA,MAAA,SAAS,EAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANX;AAOA,MAAA,IAAI,EAAC,QAPL;AAQA,MAAA,OAAO,EAAEV,KAAK,CAACc,YARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASKD,EATL,CADJ;AAaH,GAdJ,CADD,CAzBJ,CADJ;AA6CH;;AAED,eAAed,kBAAf","sourcesContent":["import React from 'react'\r\nimport { TextField, Button, Icon } from '@material-ui/core'\r\n\r\nfunction VotingOptionsField(props) {\r\n    return (\r\n        <div>\r\n            <div className='field'>\r\n                <TextField\r\n                id=\"option-input\"\r\n                className={props.classes.textField}\r\n                label=\"Voting Option\"\r\n                onBlur={props.handleBlur('options')}\r\n                helperText={props.shouldMarkError('options') ? props.messages.options : ''}\r\n                onKeyPress={(ev) => {\r\n                    if (ev.key === 'Enter') {\r\n                        props.handleAddOptionForTextField(ev)\r\n                    }\r\n                  }}\r\n                margin=\"normal\" />\r\n                \r\n                <Button\r\n                className={props.classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                onClick={props.handleAdd} >\r\n                    Add option\r\n                </Button>\r\n            </div>\r\n\r\n            <div id='options'>\r\n            {props.options.map(el => {\r\n                    return (\r\n                        <Button\r\n                        key={el}\r\n                        value='option'\r\n                        className={props.classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        startIcon={<Icon>close</Icon>}\r\n                        size=\"medium\"\r\n                        onClick={props.handleRemove} >\r\n                            {el}\r\n                        </Button>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VotingOptionsField"]},"metadata":{},"sourceType":"module"}